// Generated by CoffeeScript 1.3.3
(function() {

  define(['jquery', 'underscore', 'backbone', 'marionette', 'aloha', 'app/models', 'app/views', 'i18n!app/nls/strings', 'css!app'], function(jQuery, _, Backbone, Marionette, Aloha, Models, Views, __) {
    var Backbone_sync_orig, ContentRouter, contentController, mainRegion,
      _this = this;
    this.jQuery = this.$ = function() {
      console.warn('You should add "jquery" to your dependencies in define() instead of using the global jQuery!');
      return jQuery.apply(this, arguments);
    };
    jQuery.extend(this.jQuery, jQuery);
    Backbone_sync_orig = Backbone.sync;
    Backbone.sync = function(method, model, options) {
      var data, href, params;
      if ('update' === method) {
        data = _.extend({}, model.toJSON());
        data.json = JSON.stringify(model);
        href = options['url'] || model.url() || (function() {
          throw 'URL to sync to not defined';
        })();
        href = "" + href + "?" + (jQuery.param(model.toJSON()));
        params = {
          type: 'PUT',
          url: href,
          data: JSON.stringify(model),
          processData: false,
          dataType: 'json',
          contentType: 'application/json'
        };
        return jQuery.ajax(_.extend(params, options));
      } else {
        return Backbone_sync_orig(method, model, options);
      }
    };
    mainRegion = new Marionette.Region({
      el: '#main'
    });
    contentController = {
      workspace: function() {
        var view, workspace;
        workspace = new Models.Workspace();
        workspace.fetch();
        view = new Views.WorkspaceView({
          collection: workspace
        });
        mainRegion.show(view);
        Backbone.history.navigate('');
        return workspace.on('change', function() {
          return view.render();
        });
      },
      createContent: function() {
        var content;
        content = new Models.Content();
        this._editContent(content);
        return Backbone.history.navigate('content');
      },
      editContent: function(id) {
        var content;
        content = new Models.Content();
        content.set('id', id);
        content.fetch();
        this._editContent(content);
        return Backbone.history.navigate("content/" + id);
      },
      _editContent: function(content) {
        var view;
        jQuery('#metadata-link').off('click');
        jQuery('#roles-link').off('click');
        jQuery('#metadata-link').on('click', function(evt) {
          var modal, view;
          view = new Views.MetadataEditView({
            model: content
          });
          modal = new Views.ModalWrapper(view, __('Edit Metadata'));
          return modal.show();
        });
        jQuery('#roles-link').on('click', function(evt) {
          var modal, view;
          view = new Views.RolesEditView({
            model: content
          });
          modal = new Views.ModalWrapper(view, __('Edit Roles'));
          return modal.show();
        });
        view = new Views.ContentEditView({
          model: content
        });
        return mainRegion.show(view);
      }
    };
    ContentRouter = Marionette.AppRouter.extend({
      controller: contentController,
      appRoutes: {
        '': 'workspace',
        'content': 'createContent',
        'content/:id': 'editContent'
      }
    });
    new ContentRouter();
    Backbone.history.start();
    return jQuery(document).on('click', 'a:not([data-bypass])', function(evt) {
      var href;
      href = $(this).attr('href');
      if (href) {
        evt.preventDefault();
        return Backbone.history.navigate(href, true);
      }
    });
  });

}).call(this);
