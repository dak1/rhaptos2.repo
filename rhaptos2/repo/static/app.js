// Generated by CoffeeScript 1.3.3
(function() {
  var $toolbar, HACK_LOAD_TOOLBAR_BEFORE_ALOHA;

  $toolbar = null;

  HACK_LOAD_TOOLBAR_BEFORE_ALOHA = "__app_intenral_" + (Math.random());

  define(HACK_LOAD_TOOLBAR_BEFORE_ALOHA, ['hbs!app/views/aloha-toolbar'], function(ALOHA_TOOLBAR) {
    return $toolbar = jQuery(ALOHA_TOOLBAR({})).appendTo('body').find('div').hide();
  });

  define(['jquery', 'underscore', 'backbone', 'aloha', 'app/models', 'app/views', HACK_LOAD_TOOLBAR_BEFORE_ALOHA, 'i18n!app/nls/strings', 'css!app'], function(jQuery, _, Backbone, Aloha, Models, Views, ALOHA_TOOLBAR, __) {
    var $main, AppRouter, appRouter, x;
    this.jQuery = this.$ = function() {
      console.warn('You should add "jquery" to your dependencies in define() instead of using the global jQuery!');
      return jQuery.apply(this, arguments);
    };
    jQuery.extend(this.jQuery, jQuery);
    $main = jQuery('#main').empty();
    AppRouter = Backbone.Router.extend({
      routes: {
        '': 'index',
        'module/:uuid': 'module'
      },
      index: function() {
        var view, workspace;
        workspace = new Models.Workspace();
        workspace.fetch();
        view = new Views.WorkspaceView({
          model: {
            items: workspace
          }
        });
        $main.html('');
        $main.html(view.$el);
        view.render();
        return workspace.on('change', function() {
          return view.render();
        });
      },
      module: function(id) {
        var module;
        if (id == null) {
          id = null;
        }
        if (id) {
          module = new Models.Module({
            id: id,
            url: "/module/" + id + "/metadata/"
          });
          module.fetch();
        } else {
          module = new Models.Module();
        }
        jQuery('#metadata-link').off('click');
        jQuery('#roles-link').off('click');
        jQuery('#metadata-link').on('click', function(evt) {
          var modal;
          evt.preventDefault();
          modal = new Views.ModalWrapper(new Views.MetadataEditView({
            model: module
          }), __('Edit Metadata'));
          return modal.show();
        });
        jQuery('#roles-link').on('click', function(evt) {
          var modal;
          evt.preventDefault();
          modal = new Views.ModalWrapper(new Views.RolesEditView({
            model: module
          }), __('Edit Roles'));
          return modal.show();
        });
        return module.on('change', function() {
          var body;
          body = "<h1>Module body</h1>\n<p>This is sample body text for module " + id + ".</p>\n<p>It'll eventually get loaded dynamically</p>";
          $main.html(body);
          $toolbar.show();
          return Aloha.ready(function() {
            $main.aloha().focus();
            $main.find('math').wrap('<span class="math-element aloha-cleanme"></span>');
            return MathJax.Hub.Configured();
          });
        });
      }
    });
    appRouter = new AppRouter();
    x = Backbone.history.start();
    return jQuery(document).on('click', 'a:not([data-bypass])', function(evt) {
      var href;
      href = $(this).attr('href');
      if (href) {
        evt.preventDefault();
        return Backbone.history.navigate(href, true);
      }
    });
  });

}).call(this);
